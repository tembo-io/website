---
import { Toaster } from 'sonner';
interface Props {
	title: string;
	description?: string;
	image?: string;
	author?: string;
	keywords?: string[];
	htmlClasses?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const DEFAULT_DESCRIPTION =
	'Tembo is the Postgres developer platform for building every application and data service. Collapse the database sprawl of the modern data stack with a unified developer platform.';
const DEFAULT_OG_IMAGE = 'og-image.png';
const {
	title,
	description = DEFAULT_DESCRIPTION,
	image = DEFAULT_OG_IMAGE,
	author,
	keywords,
	htmlClasses,
} = Astro.props;
---

<!doctype html>
<html class={htmlClasses} lang='en'>
	<head>
		<!-- Google Tag Manager -->
		<script>
			// @ts-nocheck
			(function (w, d, s, l, i) {
				w[l] = w[l] || [];
				w[l].push({
					'gtm.start': new Date().getTime(),
					event: 'gtm.js',
				});
				var f = d.getElementsByTagName(s)[0],
					j = d.createElement(s),
					dl = l != 'dataLayer' ? '&l=' + l : '';
				j.async = true;
				j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;
				f.parentNode.insertBefore(j, f);
			})(window, document, 'script', 'dataLayer', 'GTM-5HSQFVL2');
		</script>
		<!-- End Google Tag Manager -->
		<!-- Google tag (gtag.js) -->
		<script
			async
			src='https://www.googletagmanager.com/gtag/js?id=G-7242E5JKJE'
		></script>
		<script>
			//@ts-nocheck
			window.dataLayer = window.dataLayer || [];
			function gtag() {
				dataLayer.push(arguments);
			}
			gtag('js', new Date());

			gtag('config', 'G-7242E5JKJE');
		</script>
		<meta charset='UTF-8' />
		<link rel='sitemap' href='/sitemap-index.xml' />
		<meta name='description' content={description} />
		<meta name='viewport' content='width=device-width' />
		<link rel='icon' type='image/svg+xml' href='/favicon.ico' />
		<meta name='generator' content={Astro.generator} />
		<title>{title}</title>
		{author && <meta name='author' content={author} />}
		{keywords && <meta name='keywords' content={keywords.join(',')} />}
		<link rel='canonical' href={canonicalURL} />
		<meta name='twitter:card' content='summary_large_image' />
		<meta name='twitter:description' content={description} />
		<meta name='twitter:site' content='@tembo_io' />
		<meta name='twitter:title' content={title} />
		<meta
			name='twitter:image'
			content={`https://tembo.io/${image.replace('./', '')}`}
		/>
		<meta
			property='og:image'
			content={`https://tembo.io/${image.replace('./', '')}`}
		/>
		<meta property='og:title' content={title} />
		<meta property='og:description' content={description} />
		<meta property='og:type' content='website' />
		<link
			rel='preload'
			as='font'
			type='font/woff'
			crossorigin='anonymous'
			href='/fonts/bai-jamjuree/bai-jamjuree-latin-200-normal.woff'
		/>
		<link
			rel='preload'
			as='font'
			type='font/woff'
			crossorigin='anonymous'
			href='/fonts/bai-jamjuree/bai-jamjuree-latin-300-normal.woff'
		/>
		<link
			rel='preload'
			as='font'
			type='font/woff'
			crossorigin='anonymous'
			href='/fonts/bai-jamjuree/bai-jamjuree-latin-400-normal.woff'
		/>
		<link
			rel='preload'
			as='font'
			type='font/woff'
			crossorigin='anonymous'
			href='/fonts/bai-jamjuree/bai-jamjuree-latin-500-normal.woff'
		/>
		<link
			rel='preload'
			as='font'
			type='font/woff'
			crossorigin='anonymous'
			href='/fonts/bai-jamjuree/bai-jamjuree-latin-600-normal.woff'
		/>
		<link
			rel='preload'
			as='font'
			type='font/woff'
			crossorigin='anonymous'
			href='/fonts/bai-jamjuree/bai-jamjuree-latin-700-normal.woff'
		/>

		<link
			rel='preload'
			as='font'
			type='font/woff'
			crossorigin='anonymous'
			href='/fonts/inter/inter-latin-200-normal.woff'
		/>
		<link
			rel='preload'
			as='font'
			type='font/woff'
			crossorigin='anonymous'
			href='/fonts/inter/inter-latin-300-normal.woff'
		/>
		<link
			rel='preload'
			as='font'
			type='font/woff'
			crossorigin='anonymous'
			href='/fonts/inter/inter-latin-400-normal.woff'
		/>
		<link
			rel='preload'
			as='font'
			type='font/woff'
			crossorigin='anonymous'
			href='/fonts/inter/inter-latin-500-normal.woff'
		/>
		<link
			rel='preload'
			as='font'
			type='font/woff'
			crossorigin='anonymous'
			href='/fonts/inter/inter-latin-600-normal.woff'
		/>
		<link
			rel='preload'
			as='font'
			type='font/woff'
			crossorigin='anonymous'
			href='/fonts/inter/inter-latin-700-normal.woff'
		/>
		<link
			rel='preload'
			as='font'
			type='font/woff'
			crossorigin='anonymous'
			href='/fonts/inter/inter-latin-800-normal.woff'
		/>
		<link
			rel='preload'
			as='font'
			type='font/woff'
			crossorigin='anonymous'
			href='/fonts/inter/inter-latin-200-normal.woff'
		/>
		<script
			defer
			data-domain='tembo.io'
			src='https://plausible.io/js/script.js'></script>
		<script
			src='https://tag.clearbitscripts.com/v1/pk_46db31c05ac5fad3ee1f5c9122b8da26/tags.js'
			referrerpolicy='strict-origin-when-cross-origin'></script>
		<script>
			// @ts-nocheck
			!(function (t, e) {
				var o, n, p, r;
				e.__SV ||
					((window.posthog = e),
					(e._i = []),
					(e.init = function (i, s, a) {
						function g(t, e) {
							var o = e.split('.');
							2 == o.length && ((t = t[o[0]]), (e = o[1])),
								(t[e] = function () {
									t.push(
										[e].concat(
											Array.prototype.slice.call(
												arguments,
												0,
											),
										),
									);
								});
						}
						((p = t.createElement('script')).type =
							'text/javascript'),
							(p.async = !0),
							(p.src = s.api_host + '/static/array.js'),
							(r =
								t.getElementsByTagName(
									'script',
								)[0]).parentNode.insertBefore(p, r);
						var u = e;
						for (
							void 0 !== a ? (u = e[a] = []) : (a = 'posthog'),
								u.people = u.people || [],
								u.toString = function (t) {
									var e = 'posthog';
									return (
										'posthog' !== a && (e += '.' + a),
										t || (e += ' (stub)'),
										e
									);
								},
								u.people.toString = function () {
									return u.toString(1) + '.people (stub)';
								},
								o =
									'capture identify alias people.set people.set_once set_config register register_once unregister opt_out_capturing has_opted_out_capturing opt_in_capturing reset isFeatureEnabled onFeatureFlags getFeatureFlag getFeatureFlagPayload reloadFeatureFlags group updateEarlyAccessFeatureEnrollment getEarlyAccessFeatures getActiveMatchingSurveys getSurveys onSessionId'.split(
										' ',
									),
								n = 0;
							n < o.length;
							n++
						)
							g(u, o[n]);
						e._i.push([i, s, a]);
					}),
					(e.__SV = 1));
			})(document, window.posthog || []);
			posthog.init('phc_E9zTq0juttr30A29GtrgJtEKl6a7skLqxtKiGzclZFE', {
				api_host: 'https://app.posthog.com',
			});
		</script>
	</head>
	<body>
		<!-- Google Tag Manager (noscript) -->
		<noscript
			><iframe
				src='https://www.googletagmanager.com/ns.html?id=GTM-5HSQFVL2'
				height='0'
				width='0'
				style='display:none;visibility:hidden'></iframe></noscript
		>
		<!-- End Google Tag Manager (noscript) -->
		<main class='overflow-clip'>
			<slot />
		</main>

		<Toaster
			position='bottom-right'
			theme='dark'
			toastOptions={{
				classNames: {
					toast: 'bg-mwasi',
				},
			}}
			client:idle
		/>
	</body>
</html>
<style is:global>
	@tailwind utilities;
	@font-face {
		font-family: 'Bai Jamjuree';
		font-style: normal;
		font-weight: 200;
		src:
			local('Bai Jamjuree ExtraLight'),
			local('BaiJamjuree-ExtraLight'),
			url('/fonts/bai-jamjuree/bai-jamjuree-latin-200-normal.woff')
				format('woff');
	}

	@font-face {
		font-family: 'Bai Jamjuree';
		font-style: normal;
		font-weight: 300;
		src:
			local('Bai Jamjuree Light'),
			local('BaiJamjuree-Light'),
			url('/fonts/bai-jamjuree/bai-jamjuree-latin-300-normal.woff')
				format('woff');
	}

	@font-face {
		font-family: 'Bai Jamjuree';
		font-style: normal;
		font-weight: 400;
		src:
			local('Bai Jamjuree Regular'),
			local('BaiJamjuree-Regular'),
			url('/fonts/bai-jamjuree/bai-jamjuree-latin-400-normal.woff')
				format('woff');
	}

	@font-face {
		font-family: 'Bai Jamjuree';
		font-style: normal;
		font-weight: 500;
		src:
			local('Bai Jamjuree Medium'),
			local('BaiJamjuree-Medium'),
			url('/fonts/bai-jamjuree/bai-jamjuree-latin-500-normal.woff')
				format('woff');
	}

	@font-face {
		font-family: 'Bai Jamjuree';
		font-style: normal;
		font-weight: 600;
		src:
			local('Bai Jamjuree SemiBold'),
			local('BaiJamjuree-SemiBold'),
			url('/fonts/bai-jamjuree/bai-jamjuree-latin-600-normal.woff')
				format('woff');
	}

	@font-face {
		font-family: 'Bai Jamjuree';
		font-style: normal;
		font-weight: 700;
		src:
			local('Bai Jamjuree Bold'),
			local('BaiJamjuree-Bold'),
			url('/fonts/bai-jamjuree/bai-jamjuree-latin-700-normal.woff')
				format('woff');
	}

	@font-face {
		font-family: 'Inter';
		font-style: normal;
		font-weight: 200;
		src:
			local('Inter ExtraLight'),
			local('Inter-ExtraLight'),
			url('/fonts/inter/inter-latin-200-normal.woff') format('woff');
	}

	@font-face {
		font-family: 'Inter';
		font-style: normal;
		font-weight: 300;
		src:
			local('Inter Light'),
			local('Inter-Light'),
			url('/fonts/inter/inter-latin-300-normal.woff') format('woff');
	}

	@font-face {
		font-family: 'Inter';
		font-style: normal;
		font-weight: 400;
		src:
			local('Inter Regular'),
			local('Inter-Regular'),
			url('/fonts/inter/inter-latin-400-normal.woff') format('woff');
	}

	@font-face {
		font-family: 'Inter';
		font-style: normal;
		font-weight: 500;
		src:
			local('Inter Medium'),
			local('Inter-Medium'),
			url('/fonts/inter/inter-latin-500-normal.woff') format('woff');
	}

	@font-face {
		font-family: 'Inter';
		font-style: normal;
		font-weight: 600;
		src:
			local('Inter SemiBold'),
			local('Inter-SemiBold'),
			url('/fonts/inter/inter-latin-600-normal.woff') format('woff');
	}

	@font-face {
		font-family: 'Inter';
		font-style: normal;
		font-weight: 700;
		src:
			local('Inter Bold'),
			local('Inter-Bold'),
			url('/fonts/inter/inter-latin-700-normal.woff') format('woff');
	}

	@font-face {
		font-family: 'Inter';
		font-style: normal;
		font-weight: 800;
		src:
			local('Inter ExtraBold'),
			local('Inter-ExtraBold'),
			url('/fonts/inter/inter-latin-800-normal.woff') format('woff');
	}

	body {
		font-family: 'Bai Jamjuree';
		background: #120f0e;
	}

	:root {
		color-scheme: dark;
	}

	img {
		user-drag: none;
		-webkit-user-drag: none;
		user-select: none;
		-moz-user-select: none;
		-webkit-user-select: none;
		-ms-user-select: none;
	}
	.safari-blur {
		-webkit-backdrop-filter: blur(10px);
	}
	.shine {
		background: linear-gradient(
			90deg,
			#131313 0%,
			#242424 10%,
			#242424 80%,
			/* Center color is most bright */ #242424 10%,
			#131313 100%
		);
	}
	.mirror-horizontal {
		transform: scaleX(-1);
	}
	*:focus-visible {
		outline: 2px solid #f77577;
		outline-offset: 4px;
	}

	::selection {
		background-color: rgba(255, 125, 127, 0.7);
		opacity: 60%;
	}
	.fade-x-md {
		-webkit-mask: none;
	}
	@media screen and (min-width: 2100px) {
		.fade-x-md {
			-webkit-mask: linear-gradient(
				90deg,
				transparent,
				#000 10%,
				#000 90%,
				transparent
			);
		}
	}
	.fade-x-md-always {
		-webkit-mask: linear-gradient(
			90deg,
			transparent,
			#000 0%,
			#000 90%,
			transparent
		);
	}
	.fade-x-md-both-sides {
		-webkit-mask: linear-gradient(
			90deg,
			transparent,
			#000 10%,
			#000 90%,
			transparent
		);
	}

	.fade-x-md-both-sides-animation {
		-webkit-mask: none;
	}
	@media screen and (min-width: 2100px) {
		.fade-x-md-both-sides-animation {
			-webkit-mask: linear-gradient(
				90deg,
				transparent,
				#000 10%,
				#000 90%,
				transparent
			);
		}
	}

	.background-img-transition {
		-webkit-transition: background-image 0.2s ease-in-out;
		transition: background-image 0.2s ease-in-out;
	}

	[data-animate] {
		--stagger: 0;
		--delay: 500ms;
		--start: 0ms;
	}

	@media (prefers-reduced-motion: no-preference) {
		[data-animate] {
			animation: enter 0.6s both;
			animation-delay: calc(var(--stagger) * var(--delay) + var(--start));
		}
	}

	[data-animation-controller='false'] [data-animate] {
		animation: none;
	}

	.slide-enter-content > * {
		--stagger: 0;
		--delay: 0ms;
		--start: 0ms;
		animation: enter 1s both 1;
		animation-delay: calc(var(--start) + var(--stagger) * var(--delay));
	}

	.slide-enter-content > *:nth-child(1) {
		--stagger: 1;
		--delay: 50ms;
	}
	.slide-enter-content > *:nth-child(2) {
		--stagger: 2;
		--delay: 100ms;
	}
	.slide-enter-content > *:nth-child(3) {
		--stagger: 3;
		--delay: 200ms;
	}
	.slide-enter-content > *:nth-child(4) {
		--stagger: 4;
	}
	.slide-enter-content > *:nth-child(5) {
		--stagger: 5;
	}
	.slide-enter-content > *:nth-child(6) {
		--stagger: 6;
	}
	.slide-enter-content > *:nth-child(7) {
		--stagger: 7;
	}
	.slide-enter-content > *:nth-child(8) {
		--stagger: 8;
	}
	.slide-enter-content > *:nth-child(9) {
		--stagger: 9;
	}
	.slide-enter-content > *:nth-child(10) {
		--stagger: 10;
	}
	.slide-enter-content > *:nth-child(11) {
		--stagger: 11;
	}
	.slide-enter-content > *:nth-child(12) {
		--stagger: 12;
	}
	.slide-enter-content > *:nth-child(13) {
		--stagger: 13;
	}
	.slide-enter-content > *:nth-child(14) {
		--stagger: 14;
	}
	.slide-enter-content > *:nth-child(15) {
		--stagger: 15;
	}
	.slide-enter-content > *:nth-child(16) {
		--stagger: 16;
	}
	.slide-enter-content > *:nth-child(17) {
		--stagger: 17;
	}
	.slide-enter-content > *:nth-child(18) {
		--stagger: 18;
	}
	.slide-enter-content > *:nth-child(19) {
		--stagger: 19;
	}
	.slide-enter-content > *:nth-child(20) {
		--stagger: 20;
	}

	@keyframes enter {
		0% {
			opacity: 0;
			transform: translateY(10px);
		}

		to {
			opacity: 1;
			transform: none;
		}
	}
	.will-change-transform {
		will-change: transform;
	}

	.astro-code {
		background-color: #1c1c1c !important;
		border: 1px solid #292929 !important;
		border-radius: 10px;
	}
	.gradient-next-button {
		text-align: center;
		border: 1px solid #292929;
		background: linear-gradient(#1c1c1c, #1c1c1c) padding-box;
		transition: all 0.025s ease;
	}

	.gradient-next-button:hover {
		border: 1px solid #0000;
		background:
			linear-gradient(#1c1c1c, #1c1c1c) padding-box,
			linear-gradient(
					68.42deg,
					#f77577 0%,
					#db39cb 79.07%,
					#ca6fe5 170.36%
				)
				border-box;
	}

	@keyframes spin-slow {
		from {
			transform: rotate(0deg);
		}
		to {
			transform: rotate(360deg);
		}
	}
	.animate-spin-slow {
		animation: spin-slow 190s linear infinite;
	}
	.circle-container:hover {
		animation-play-state: paused;
	}
</style>

<script>
	// Source: https://github.com/JuanM04/portfolio/blob/983b0ed0eabdac37bf8b7912d3e8128a443192b9/src/pages/docs/%5B...documentSlug%5D.astro#L74-L103
	// From this comment: https://github.com/withastro/astro/issues/4433#issuecomment-1584019991
	/**
	 * @params {HTMLCollectionOf<HTMLElement>} graphs
	 */
	// @ts-ignore
	async function renderDiagrams(graphs) {
		const { default: mermaid } = await import('mermaid');
		mermaid.initialize({
			startOnLoad: false,
			fontFamily: 'var(--sans-font)',
			// @ts-ignore This works, but TS expects a enum for some reason
			theme: window.matchMedia('(prefers-color-scheme: dark)').matches
				? 'dark'
				: 'default',
		});

		for (const graph of graphs) {
			const content = graph.querySelector('.mermaid-src').innerText;
			if (!content) continue;
			let svg = document.createElement('svg');
			const id = (svg.id =
				'mermaid-' + Math.round(Math.random() * 100000));
			graph.appendChild(svg);
			mermaid.render(id, content).then((result) => {
				graph.innerHTML = result.svg;
			});
		}
	}

	const graphs = document.getElementsByClassName('mermaid');
	if (document.getElementsByClassName('mermaid').length > 0) {
		renderDiagrams(graphs);
	}
</script>
