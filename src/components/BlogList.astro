---
import Container from './Container';
import BlogPost from './BlogPost.astro';
import Tag from './Tag.astro';
import type { CollectionEntry } from 'astro:content';

interface Props {
	posts: CollectionEntry<'blog'>[];
}

const dateOptions = { year: 'numeric', month: 'short', day: 'numeric' };
const images = import.meta.glob<{ default: ImageMetadata }>(
	'/src/content/blog/**/*.{jpeg,jpg,png,webp,svg,gif}',
);
const { posts } = Astro.props;
---

<Container styles='pb-4'>
	<div class='mt-[120px] mobile:mt-[180px]'>
		<header>
			<h1 class='text-neon font-extrabold text-5xl lg:text-6xl z-10 mb-6'>
				Tembo's Blog
			</h1>
		</header>
		<div class='mt-16'>
			<div class='flex items-center justify-between'>
				<div class='flex items-center gap-2 flex-wrap'>
					<Tag title='All' />
					<Tag title='Postgres' />
					<Tag title='Engineering' />
					<Tag title='Stacks' />
					<Tag title='Data' />
					<Tag title='Extensions' />
				</div>
			</div>
			<div class='mt-10 pb-2'>
				<div class='grid grid-cols-12 lg:gap-6'>
					{
						posts.length > 0 ? (
							posts.map(async (post) => {
								const { remarkPluginFrontmatter } =
									await post.render();
								const dateString = post.id.substring(0, 10);
								const parsedDate =
									post.data?.date || new Date(dateString);
								const postDirectory = post.id.split('/')[0];
								const image =
									images[
										`/src/content/blog/${postDirectory}${post.data.image?.replace('.', '')}`
									];
								return (
									<BlogPost
										title={post.data.title}
										slug={post.slug}
										readingTime={
											remarkPluginFrontmatter.minutesRead
										}
										date={parsedDate.toLocaleDateString(
											'en-US',
											dateOptions as any,
										)}
										author={post.data.authors[0]}
										heroImage={image}
									/>
								);
							})
						) : (
							<p class='text-salmon font-semibold col-span-2'>
								No results.
							</p>
						)
					}
				</div>
			</div>
		</div>
	</div>
</Container>
