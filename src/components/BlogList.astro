---
import Container from './Container';
import Tag from './Tag.astro';
import type { CollectionEntry } from 'astro:content';
import { BlogPosts } from './BlogPosts';

interface Props {
	posts: CollectionEntry<'blog'>[];
}

const dateOptions = { year: 'numeric', month: 'short', day: 'numeric' };

const { posts } = Astro.props;

const resolvedPosts = await Promise.all(
	posts.map(async (post) => {
		const { remarkPluginFrontmatter } = await post.render();
		const dateString = post.id.substring(0, 10);
		const parsedDate = post.data?.date || new Date(dateString);
		const image = `${post.data.image?.replace('.', '')}`;

		return {
			id: post.id as string,
			slug: post.slug as string,
			title: post.data.title,
			date: parsedDate.toLocaleDateString('en-US', dateOptions as any),
			author: post.data.authors[0],
			readingTime: remarkPluginFrontmatter.minutesRead,
			heroImage: image,
			body: post.body,
		};
	}),
);
---

<Container styles='pb-4'>
	<div class='mt-[120px] mobile:mt-[180px]'>
		<header>
			<h1
				class='text-pricingGreen font-bold text-[32px] leading-[40px] tracking-[0.472px] customXs:text-5xl customXs:leading-[64px] customMd:text-[64px] customMd:leading-[80px] mb-6'
			>
				Latest insights and updates
			</h1>
			<p
				class='opacity-80 font-secondary font-medium text-white text-base leading-[25px] mb-10'
			>
				Discover articles about Postgres, engineering, and data
			</p>
		</header>
		<BlogPosts
			posts={resolvedPosts}
			client:load
		>
			<Tag title='All' />
			<Tag title='Postgres' />
			<Tag title='Engineering' />
			<Tag title='Stacks' />
			<Tag title='Data' />
			<Tag title='Extensions' />
		</BlogPosts>
	</div>
</Container>
