"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[483],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),l=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return o.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(n),d=r,g=u["".concat(s,".").concat(d)]||u[d]||m[d]||a;return n?o.createElement(g,i(i({ref:t},p),{},{components:n})):o.createElement(g,i({ref:t},p))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[u]="string"==typeof e?e:r,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},96810:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var o=n(87462),r=(n(67294),n(3905));const a={sidebar_position:4,tags:["backup","restore","recovery"]},i="Backup and restore",c={unversionedId:"tembo-cloud/configuration-and-management/backup-and-restore",id:"tembo-cloud/configuration-and-management/backup-and-restore",title:"Backup and restore",description:"Tembo performs Postgres backups and Write-Ahead Log (WAL) archiving using Barman, powered by the Cloud Native Postgres Operator (CNPG).",source:"@site/docs/tembo-cloud/configuration-and-management/backup-and-restore.md",sourceDirName:"tembo-cloud/configuration-and-management",slug:"/tembo-cloud/configuration-and-management/backup-and-restore",permalink:"/docs/tembo-cloud/configuration-and-management/backup-and-restore",draft:!1,editUrl:"https://github.com/tembo-io/website/blob/main/docs/tembo-cloud/configuration-and-management/backup-and-restore.md",tags:[{label:"backup",permalink:"/docs/tags/backup"},{label:"restore",permalink:"/docs/tags/restore"},{label:"recovery",permalink:"/docs/tags/recovery"}],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,tags:["backup","restore","recovery"]},sidebar:"tutorialSidebar",previous:{title:"Postgres Configuration",permalink:"/docs/tembo-cloud/configuration-and-management/postgres-configuration"},next:{title:"Connection Pooling",permalink:"/docs/tembo-cloud/configuration-and-management/connection-pooling"}},s={},l=[{value:"Retention policies",id:"retention-policies",level:2},{value:"WAL archiving",id:"wal-archiving",level:2},{value:"Restore",id:"restore",level:2}],p={toc:l},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"backup-and-restore"},"Backup and restore"),(0,r.kt)("p",null,"Tembo performs Postgres backups and Write-Ahead Log (WAL) archiving using ",(0,r.kt)("a",{parentName:"p",href:"https://pgbarman.org/"},"Barman"),", powered by the ",(0,r.kt)("a",{parentName:"p",href:"https://cloudnative-pg.io/"},"Cloud Native Postgres Operator (CNPG)"),"."),(0,r.kt)("p",null,"Backups are saved to ",(0,r.kt)("a",{parentName:"p",href:"https://aws.amazon.com/s3/"},"Amazon S3"),"."),(0,r.kt)("h2",{id:"retention-policies"},"Retention policies"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The retention policy for Barman is configured to 30 days"),(0,r.kt)("li",{parentName:"ul"},"The retention policy for AWS S3 is set to 40 days"),(0,r.kt)("li",{parentName:"ul"},"AWS S3 object versioning is enabled, and the retention policy for non-current versions is 30 days")),(0,r.kt)("h2",{id:"wal-archiving"},"WAL archiving"),(0,r.kt)("p",null,"Tembo sets ",(0,r.kt)("inlineCode",{parentName:"p"},"archive_timeout")," to 5min, ensuring that WAL files are closed and archived to S3 at least every five minutes, providing a deterministic time-based value for your Recovery Point Objective (RPO)."),(0,r.kt)("h2",{id:"restore"},"Restore"),(0,r.kt)("p",null,"Tembo Cloud supports Point-In-Time Recovery (PITR) to a new Tembo Instance for all running Instances and for 30 days after deletion."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Coming soon: Point-In-Time Recovery (PITR) via the ",(0,r.kt)("a",{parentName:"p",href:"https://cloud.tembo.io"},"Tembo Cloud UI"))),(0,r.kt)("p",null,"For information on authenticating to the API, please see the ",(0,r.kt)("a",{parentName:"p",href:"/docs/tembo-cloud/security-and-authentication/api-authentication"},"Tembo Cloud API authentication guide"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'TEMBO_TOKEN=<your token>\nTEMBO_ORG=<your organization id>\nTEMBO_INST_RESTORE_FROM=<your instance id>\nTEMBO_INST_RESTORE_TO=<your new instance name>\n\n# Recover to five minutes ago\nTEMBO_RECOVERY_TIME=$(date -u +\'%Y-%m-%dT%H:%M:%SZ\' -d \'-5 minutes\')\n\ncurl -X \'POST\' \\\n  "https://api.tembo.io/api/v1/orgs/$TEMBO_ORG/restore" \\\n  -H "accept: application/json" \\\n  -H "Authorization: Bearer $TEMBO_TOKEN" \\\n  -H "Content-Type: application/json" \\\n  -d @- <<EOF\n{\n    "instance_name": "$TEMBO_INST_RESTORE_TO",\n    "restore": {\n        "instance_id": "$TEMBO_INST_RESTORE_FROM",\n        "recovery_target_time": "$TEMBO_RECOVERY_TIME"\n    }\n}\nEOF\n')),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"recovery_target_time")," is omitted, then it will use now as the time."),(0,r.kt)("p",null,"For more information to restore from an existing instance, please see the ",(0,r.kt)("a",{parentName:"p",href:"https://tembo.io/docs/tembo-cloud/openapi/#tag/instance/operation/restore_instance"},"Tembo Cloud Platform API documentation"),"."))}m.isMDXComponent=!0}}]);