"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4147],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=p(n),d=r,g=c["".concat(l,".").concat(d)]||c[d]||m[d]||a;return n?o.createElement(g,s(s({ref:t},u),{},{components:n})):o.createElement(g,s({ref:t},u))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[c]="string"==typeof e?e:r,s[1]=i;for(var p=2;p<a;p++)s[p]=n[p];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},96832:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var o=n(87462),r=(n(67294),n(3905));const a={slug:"tembo-operator",title:"Tembo Operator: A Rust-based Kubernetes Operator for Postgres",authors:["ian"],tags:["postgres","kubernetes","rust"],image:"./k8s-operator.webp"},s=void 0,i={permalink:"/blog/tembo-operator",editUrl:"https://github.com/tembo-io/website/blob/main/blog/2023-10-25-tembo-operator/index.md",source:"@site/blog/2023-10-25-tembo-operator/index.md",title:"Tembo Operator: A Rust-based Kubernetes Operator for Postgres",description:"At Tembo, we\u2019ve been developing an open-source Kubernetes Operator for Postgres. We use this operator to power our managed Postgres platform, Tembo Cloud. We\u2019re excited to share our progress, experience, and vision for this project. This post aims to assist anyone interested in utilizing Kubernetes operators for Postgres or writing Kubernetes operators using Rust.",date:"2023-10-25T00:00:00.000Z",formattedDate:"October 25, 2023",tags:[{label:"postgres",permalink:"/blog/tags/postgres"},{label:"kubernetes",permalink:"/blog/tags/kubernetes"},{label:"rust",permalink:"/blog/tags/rust"}],readingTime:7.055,hasTruncateMarker:!1,authors:[{name:"Ian Stanton",title:"Founding Engineer",url:"https://github.com/ianstanton",email:"noreply@tembo.io",imageURL:"https://github.com/ianstanton.png",key:"ian"}],frontMatter:{slug:"tembo-operator",title:"Tembo Operator: A Rust-based Kubernetes Operator for Postgres",authors:["ian"],tags:["postgres","kubernetes","rust"],image:"./k8s-operator.webp"},prevItem:{title:"Hacking Postgres, Ep. 6: Regina Obe and Paul Ramsey",permalink:"/blog/hacking-postgres-ep6"},nextItem:{title:"Anonymized dump of your Postgres data",permalink:"/blog/anon-dump"}},l={image:n(31351).Z,authorsImageUrls:[void 0]},p=[{value:"What is a Kubernetes Operator?",id:"what-is-a-kubernetes-operator",level:2},{value:"Kubernetes Operators and the Rise of Rust",id:"kubernetes-operators-and-the-rise-of-rust",level:2},{value:"Building the Tembo Operator",id:"building-the-tembo-operator",level:2},{value:"Roll Your Own",id:"roll-your-own",level:3},{value:"CNPG to the Rescue",id:"cnpg-to-the-rescue",level:3},{value:"Using the Tembo Operator",id:"using-the-tembo-operator",level:2},{value:"Up Next",id:"up-next",level:2}],u={toc:p},c="wrapper";function m(e){let{components:t,...a}=e;return(0,r.kt)(c,(0,o.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"At Tembo, we\u2019ve been developing an open-source Kubernetes Operator for Postgres. We use this operator to power our managed Postgres platform, ",(0,r.kt)("a",{parentName:"p",href:"https://cloud.tembo.io/"},"Tembo Cloud"),". We\u2019re excited to share our progress, experience, and vision for this project. This post aims to assist anyone interested in utilizing Kubernetes operators for Postgres or writing Kubernetes operators using Rust."),(0,r.kt)("h2",{id:"what-is-a-kubernetes-operator"},"What is a Kubernetes Operator?"),(0,r.kt)("p",null,"Kubernetes was designed with automation in mind, and operators allow for users to extend native Kubernetes behavior and principles to manage custom resources and components."),(0,r.kt)("p",null,"With a Kubernetes operator, users can write code that defines how their application should be deployed and managed on Kubernetes. This code is then packaged into a container image and deployed to Kubernetes. The operator then watches for changes to the custom resource and takes action to reconcile the state of the application\u2019s components with the desired state of the custom resource."),(0,r.kt)("p",null,"In short, using a Kubernetes operator is the most effective way to run applications on Kubernetes in 2023."),(0,r.kt)("p",null,"You can read more about Kubernetes operators on this ",(0,r.kt)("a",{parentName:"p",href:"https://www.cncf.io/blog/2022/06/15/kubernetes-operators-what-are-they-some-examples/"},"CNCF blog post"),", where the image below is."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"./k8s-operator.webp",src:n(31351).Z,width:"1920",height:"1080"})),(0,r.kt)("p",{align:"center"},"*Image credit: CNCF blog*"),(0,r.kt)("h2",{id:"kubernetes-operators-and-the-rise-of-rust"},"Kubernetes Operators and the Rise of Rust"),(0,r.kt)("p",null,"Because Kubernetes itself is written in Go, the majority of Kubernetes operators available today are also written in Go. The ",(0,r.kt)("a",{parentName:"p",href:"https://book.kubebuilder.io/"},"kubebuilder")," project simplifies the process of building Kubernetes operators in Go and is widely considered the de facto standard for doing so."),(0,r.kt)("p",null,"With the increasing popularity of Rust, it was only a matter of time before someone developed a framework for building Kubernetes operators in Rust. The ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/kube-rs/kube"},"kube-rs")," project allows developers to build Rust-based Kubernetes operators in a similar manner to the ",(0,r.kt)("inlineCode",{parentName:"p"},"kubebuilder")," project. This project excited us for a few reasons:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"We were interested in learning Rust."),(0,r.kt)("li",{parentName:"ol"},"We wanted to explore whether Rust could be a viable alternative to Go for writing Kubernetes operators."),(0,r.kt)("li",{parentName:"ol"},"We were inspired by the success of companies like ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/stackabletech"},"Stackable"),", who have developed numerous Kubernetes operators in Rust.")),(0,r.kt)("p",null,"This excitement led us to the decision to write our Kubernetes operator in Rust."),(0,r.kt)("h2",{id:"building-the-tembo-operator"},"Building the Tembo Operator"),(0,r.kt)("p",null,"Tembo Cloud distinguishes itself from other managed Postgres offerings in several ways, one of which is the ability to install and enable Postgres extensions on the fly. This experience is in part powered by ",(0,r.kt)("a",{parentName:"p",href:"https://pgt.dev/"},"Trunk"),", a Postgres extension registry and companion CLI that provide a simplified extension management experience."),(0,r.kt)("p",null,"It also introduces the concept of ",(0,r.kt)("a",{parentName:"p",href:"https://tembo.io/blog/tembo-stacks-intro"},"Stacks"),", which are pre-built use-case-specific Postgres deployments which are optimized and tuned to serve a specific workload."),(0,r.kt)("h3",{id:"roll-your-own"},"Roll Your Own"),(0,r.kt)("p",null,"In order to build these unique capabilities, we knew we\u2019d need to harness the power and flexibility of a Kubernetes operator in our own way. Although there are several Kubernetes operators for Postgres available, none of them offer the same unique Postgres extension management experience or the concept of Stacks."),(0,r.kt)("p",null,"Initially, we attempted to build our own operator from scratch. We had successfully built the extension management piece, but soon realized that we were duplicating existing efforts. We had a comprehensive list of baseline features to develop, which included:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Backup"),(0,r.kt)("li",{parentName:"ul"},"Recovery"),(0,r.kt)("li",{parentName:"ul"},"Connection Pooling"),(0,r.kt)("li",{parentName:"ul"},"Failover"),(0,r.kt)("li",{parentName:"ul"},"Upgrades")),(0,r.kt)("h3",{id:"cnpg-to-the-rescue"},"CNPG to the Rescue"),(0,r.kt)("p",null,"Enter ",(0,r.kt)("a",{parentName:"p",href:"https://cloudnative-pg.io/"},"CloudNativePG")," (CNPG). CNPG is a Kubernetes operator for Postgres created by the folks at EDB. We found it to be the most compelling of the many Kubernetes operators for Postgres out there. It provided many of the features we needed, including backup, recovery, connection pooling, failover, and upgrades. However, we still needed the ability to install and enable any Postgres extensions on the fly and define Stacks."),(0,r.kt)("p",null,"This is where the Tembo Operator comes in. We built the Tembo Operator in a way that utilizes CNPG, which enables us to offer a distinctive management experience for Postgres extensions and Stacks while utilizing a reliable and stable Postgres solution."),(0,r.kt)("h2",{id:"using-the-tembo-operator"},"Using the Tembo Operator"),(0,r.kt)("p",null,"Let\u2019s take a look at what a custom resource spec looks like for the Tembo Operator. Here\u2019s an example for our Machine Learning Stack. We can see this sample spec makes use of our Machine Learning Stack and includes a handful of extensions. Keep in mind, these extensions are installed at runtime with Trunk and are not built into the container image."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: coredb.io/v1alpha1\nkind: CoreDB\nmetadata:\n  name: sample-machine-learning\nspec:\n  image: "quay.io/tembo/ml-cnpg:15.3.0-1-a3e532d"\n  stop: false\n  stack:\n    name: MachineLearning\n    postgres_config:\n      - name: pg_stat_statements.track\n        value: all\n      - name: cron.host\n        value: /controller/run\n      - name: track_io_timing\n        value: \'on\'\n      - name: shared_preload_libraries\n        value: vectorize,pg_stat_statements,pgml,pg_cron,pg_later\n  trunk_installs:\n    - name: pgvector\n      version: 0.5.0\n    - name: pgml\n      version: 2.7.1\n    - name: pg_embedding\n      version: 0.1.0\n    - name: pg_cron\n      version: 1.5.2\n    - name: pgmq\n      version: 0.14.2\n    - name: vectorize\n      version: 0.0.2\n    - name: pg_later\n      version: 0.0.8\n  extensions:\n    # trunk project pgvector\n    - name: vector\n      locations:\n        - database: postgres\n          enabled: true\n          version: 0.5.0\n    # trunk project postgresml\n    - name: pgml\n      locations:\n        - database: postgres\n          enabled: true\n          version: 2.7.1\n    # trunk project pg_embedding\n    - name: embedding\n      locations:\n        - database: postgres\n          enabled: false\n          version: 0.1.0\n    - name: pg_cron\n      description: pg_cron\n      locations:\n        - database: postgres\n          enabled: true\n          version: 1.5.2\n    - name: pgmq\n      description: pgmq\n      locations:\n        - database: postgres\n          enabled: true\n          version: 0.14.2\n    - name: vectorize\n      description: simple vector search\n      locations:\n        - database: postgres\n          enabled: true\n          version: 0.0.2\n    - name: pg_later\n      description: async query execution\n      locations:\n        - database: postgres\n          enabled: true\n          version: 0.0.8\n  runtime_config:\n    - name: shared_buffers\n      value: "1024MB"\n    - name: max_connections\n      value: "431"\n    - name: work_mem\n      value: "5MB"\n    - name: bgwriter_delay\n      value: "200ms"\n    - name: effective_cache_size\n      value: "2867MB"\n    - name: maintenance_work_mem\n      value: "204MB"\n    - name: max_wal_size\n      value: "10GB"\n')),(0,r.kt)("p",null,"To create our Postgres instance, we run the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\u276f kubectl apply -f yaml/sample-machine-learning.yaml\ncoredb.coredb.io/sample-machine-learning created\n\u276f kubectl get po\nNAME                                               READY   STATUS    RESTARTS   AGE\nsample-machine-learning-1                          1/1     Running   0          19s\nsample-machine-learning-metrics-5fbcf9b676-hkxtk   1/1     Running   0          31s\n")),(0,r.kt)("p",null,"Once we\u2019ve connected to the Postgres instance, we can run ",(0,r.kt)("inlineCode",{parentName:"p"},"\\dx")," to confirm the extensions were installed and enabled as expected:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'\u276f export PGPASSWORD=$(kubectl get secrets/sample-machine-learning-connection --template={{.data.password}} | base64 -d)\n\u276f psql postgres://postgres:$PGPASSWORD@sample-machine-learning.localhost:5432\npsql (16.0 (Ubuntu 16.0-1.pgdg22.04+1), server 15.3)\nSSL connection (protocol: TLSv1.3, cipher: TLS_AES_256_GCM_SHA384, compression: off)\nType "help" for help.\n\npostgres=# \\dx\n                                            List of installed extensions\n        Name        | Version |   Schema   |                              Description                               \n--------------------+---------+------------+------------------------------------------------------------------------\n pg_cron            | 1.5     | pg_catalog | Job scheduler for PostgreSQL\n pg_later           | 0.0.8   | pglater    | pg_later:  Run queries now and get results later\n pg_stat_statements | 1.10    | public     | track planning and execution statistics of all SQL statements executed\n pgmq               | 0.14.2  | public     | A lightweight message queue. Like AWS SQS and RSMQ but on Postgres.\n plpgsql            | 1.0     | pg_catalog | PL/pgSQL procedural language\n vector             | 0.5.0   | public     | vector data type and ivfflat access method\n vectorize          | 0.0.2   | vectorize  | The simplest way to do vector search on Postgres\n')),(0,r.kt)("p",null,"Let\u2019s install a new extension by adding the following to our sample spec:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"...\ntrunk_installs:\n    - name: pg_bm25\n      version: 0.4.0\n...\nextensions:\n    - name: pg_bm25\n      locations:\n        - database: postgres\n          enabled: true\n          version: 0.4.0\n")),(0,r.kt)("p",null,"After applying the updated spec and connecting to Postgres, we can see the new extension ",(0,r.kt)("a",{parentName:"p",href:"https://pgt.dev/extensions/pg_bm25"},"pg_bm25")," is installed and enabled as expected:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'\u276f psql postgres://postgres:$PGPASSWORD@sample-machine-learning.localhost:5432\npsql (16.0 (Ubuntu 16.0-1.pgdg22.04+1), server 15.3)\nSSL connection (protocol: TLSv1.3, cipher: TLS_AES_256_GCM_SHA384, compression: off)\nType "help" for help.\n\npostgres=# \\dx\n                                            List of installed extensions\n        Name        | Version |   Schema   |                              Description                               \n--------------------+---------+------------+------------------------------------------------------------------------\n pg_bm25            | 0.0.0   | paradedb   | pg_bm25: PostgreSQL-native, full text search using BM25\n pg_cron            | 1.5     | pg_catalog | Job scheduler for PostgreSQL\n pg_later           | 0.0.8   | pglater    | pg_later:  Run queries now and get results later\n pg_stat_statements | 1.10    | public     | track planning and execution statistics of all SQL statements executed\n pgmq               | 0.14.2  | public     | A lightweight message queue. Like AWS SQS and RSMQ but on Postgres.\n plpgsql            | 1.0     | pg_catalog | PL/pgSQL procedural language\n vector             | 0.5.0   | public     | vector data type and ivfflat access method\n vectorize          | 0.0.2   | vectorize  | The simplest way to do vector search on Postgres\n')),(0,r.kt)("h2",{id:"up-next"},"Up Next"),(0,r.kt)("p",null,"We\u2019re currently working on exciting new features that enable the deployment of custom applications alongside Postgres. These features include a REST API, GraphQL, and more. Stay tuned for future updates!"),(0,r.kt)("p",null,"For more information on running the Tembo Operator, check out our docs at:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://tembo.io/docs/tembo-stacks/local-tembo-operator"},"https://tembo.io/docs/tembo-stacks/local-tembo-operator"))),(0,r.kt)("p",null,"If you're interested in contributing to the project, check out our Github repo at:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/tembo-io/tembo-stacks/tree/main/tembo-operator"},"https://github.com/tembo-io/tembo-stacks/tree/main/tembo-operator"))),(0,r.kt)("p",null,"And if you want to try out the full power of Postgres and fully delegate extension management to us, ",(0,r.kt)("a",{parentName:"p",href:"https://cloud.tembo.io"},"try out Tembo Cloud"),"."))}m.isMDXComponent=!0},31351:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/k8s-operator-e0798d9d346084f00e21f39668252d9d.webp"}}]);