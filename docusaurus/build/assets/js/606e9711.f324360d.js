"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8387],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>h});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},s=Object.keys(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),i=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=i(e.components);return o.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},g=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=i(n),g=r,h=u["".concat(p,".").concat(g)]||u[g]||d[g]||s;return n?o.createElement(h,a(a({ref:t},l),{},{components:n})):o.createElement(h,a({ref:t},l))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,a=new Array(s);a[0]=g;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c[u]="string"==typeof e?e:r,a[1]=c;for(var i=2;i<s;i++)a[i]=n[i];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}g.displayName="MDXCreateElement"},31816:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>i});var o=n(87462),r=(n(67294),n(3905));const s={sidebar_position:2,tags:["Postgres Basics"]},a="Connecting to Postgres with Python",c={unversionedId:"postgres_guides/connecting-to-postgres-with-python/connecting-to-postgres-with-python",id:"postgres_guides/connecting-to-postgres-with-python/connecting-to-postgres-with-python",title:"Connecting to Postgres with Python",description:"In this tutorial, we've covered a comprehensive, step-by-step procedure for establishing a connection to a PostgreSQL database using Python. We will take advantage of psycopg library to connect to the Postgres database.",source:"@site/docs/postgres_guides/connecting-to-postgres-with-python/connecting-to-postgres-with-python.md",sourceDirName:"postgres_guides/connecting-to-postgres-with-python",slug:"/postgres_guides/connecting-to-postgres-with-python/",permalink:"/docs/postgres_guides/connecting-to-postgres-with-python/",draft:!1,editUrl:"https://github.com/tembo-io/website/blob/main/docs/postgres_guides/connecting-to-postgres-with-python/connecting-to-postgres-with-python.md",tags:[{label:"Postgres Basics",permalink:"/docs/tags/postgres-basics"}],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,tags:["Postgres Basics"]},sidebar:"tutorialSidebar",previous:{title:"Connecting to Postgres with Nodejs",permalink:"/docs/postgres_guides/connecting-to-postgres-with-nodejs/"},next:{title:"How to Backup and Restore a Postgres Database",permalink:"/docs/postgres_guides/how-to-backup-and-restore-a-postgres-database/"}},p={},i=[{value:"Conclusion",id:"conclusion",level:2}],l={toc:i},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"connecting-to-postgres-with-python"},"Connecting to Postgres with Python"),(0,r.kt)("p",null,"In this tutorial, we've covered a comprehensive, step-by-step procedure for establishing a connection to a PostgreSQL database using Python. We will take advantage of ",(0,r.kt)("em",{parentName:"p"},"psycopg")," library to connect to the Postgres database."),(0,r.kt)("p",null,"Let\u2019s get started"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Step 1")," - Install the \u201cpsycopg\u201d library in your project. Run this command in your terminal to install the library:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"pip install psycopg\n")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"psycopg is the most popular PostgreSQL database library for the Python language. It was designed for large-scale applications that create and deletes tons of cursors and make large amount of continuous Inserts and Update calls."),(0,r.kt)("p",{parentName:"admonition"},"You can read more about psycopg library ",(0,r.kt)("a",{parentName:"p",href:"https://pypi.org/project/psycopg/"},"here"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Step 2")," - Import psycopg in your Python code"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"import psycopg\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Step 3")," - Setup a database connection. For that, create a connection object consisting of database connection parameters - username, database name, password, host and port."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'\n    connection = psycopg.connect(\n        dbname="database_name",\n        user="username",\n        password="password",\n        host="host",\n        port="port"\n    )\n\n\n')),(0,r.kt)("p",null,"Make sure to replace the database_name, username, password, host, and port with the credentials of your database."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Step 4")," - Create a cursor object to run the SQL queries. A cursor is the main object that interacts with the database"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cursor = connection.cursor()\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Step 5")," - Execute the desired SQL query in the cursor object."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'cursor.execute("SELECT * FROM customers")\ndataset = cursor.fetchall()\n\nFor data in dataset:\n    print(data)\n')),(0,r.kt)("p",null,"You can execute your desired query in the cursor object. Also, you can create multiple cursor objects simultaneously to execute multiple SQL queries concurrently."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Step 6")," - Close the created cursor object and connection when their work is done."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"cursor.close()\nconnection.close()\n")),(0,r.kt)("p",null,"You can always create a new cursor object after closing an existing cursor object."),(0,r.kt)("p",null,"Here\u2019s the full code sample:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'# Importing library\nimport psycopg\n\n# Building the database connection\n\n    connection = psycopg.connect(\n        dbname="database_name",\n        user="username",\n        password="password",\n        host="host",\n        port="port"\n    )\n    # Successfully connected to database\n\n# Creating a cursor\ncursor = connection.cursor()\n\n# Executing SQL queries\ncursor.execute("SELECT * FROM customers")\nDatasets = cursor.fetchall()\n\nfor data in datasets:\n    print(row)\n\n# Closing the cursor\ncursor.close()\n\n')),(0,r.kt)("p",null,"You can simply copy and paste this code snippet to integrate in your project. Just make sure to replace the variables with the database credentials."),(0,r.kt)("h2",{id:"conclusion"},"Conclusion"),(0,r.kt)("p",null,"In this guide, we discussed the step-by-step process to connect to the Postgres database with Python."),(0,r.kt)("p",null,"You can also read our well-structured ",(0,r.kt)("a",{parentName:"p",href:"https://tembo.io/docs/category/postgres-guides"},"guides for Postgres operations"),"."),(0,r.kt)("p",null,"For further exploration of valuable PostgreSQL-related content, we encourage you to explore our informative ",(0,r.kt)("a",{parentName:"p",href:"https://tembo.io/blog"},"blog posts"),"."))}d.isMDXComponent=!0}}]);