"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3980],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var a=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=u(n),d=s,g=m["".concat(l,".").concat(d)]||m[d]||c[d]||r;return n?a.createElement(g,o(o({ref:t},p),{},{components:n})):a.createElement(g,o({ref:t},p))}));function g(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,o=new Array(r);o[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[m]="string"==typeof e?e:s,o[1]=i;for(var u=2;u<r;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},72451:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>u});var a=n(87462),s=(n(67294),n(3905));const r={slug:"introducing-pgmq",title:"Introducing PGMQ: Simple Message Queues built on Postgres",authors:["adam"],tags:["postgres","announcement","queues"]},o=void 0,i={permalink:"/blog/introducing-pgmq",editUrl:"https://github.com/tembo-io/website/blob/main/blog/2023-08-03-introducing-pgmq/index.md",source:"@site/blog/2023-08-03-introducing-pgmq/index.md",title:"Introducing PGMQ: Simple Message Queues built on Postgres",description:"We\u2019ve released PGMQ, a packaged extension for message queues on Postgres.",date:"2023-08-03T00:00:00.000Z",formattedDate:"August 3, 2023",tags:[{label:"postgres",permalink:"/blog/tags/postgres"},{label:"announcement",permalink:"/blog/tags/announcement"},{label:"queues",permalink:"/blog/tags/queues"}],readingTime:4.345,hasTruncateMarker:!1,authors:[{name:"Adam Hendel",title:"Founding Engineer",url:"https://github.com/ChuckHend",email:"noreply@tembo.io",imageURL:"https://github.com/chuckhend.png",key:"adam"}],frontMatter:{slug:"introducing-pgmq",title:"Introducing PGMQ: Simple Message Queues built on Postgres",authors:["adam"],tags:["postgres","announcement","queues"]},prevItem:{title:"Introducing pg_later: Asynchronous Queries for Postgres, Inspired by Snowflake",permalink:"/blog/introducing-pg-later"},nextItem:{title:"Tembo Manifesto",permalink:"/blog/tembo-manifesto"}},l={authorsImageUrls:[void 0]},u=[{value:"The need for message queues",id:"the-need-for-message-queues",level:2},{value:"Building your queues on Postgres",id:"building-your-queues-on-postgres",level:2},{value:"Queues Implemented with best practices",id:"queues-implemented-with-best-practices",level:2},{value:"Using PGMQ",id:"using-pgmq",level:2},{value:"Getting involved",id:"getting-involved",level:2},{value:"Interested in learning more?",id:"interested-in-learning-more",level:2}],p={toc:u},m="wrapper";function c(e){let{components:t,...r}=e;return(0,s.kt)(m,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"We\u2019ve released ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/tembo-io/pgmq"},"PGMQ"),", a packaged extension for message queues on Postgres. "),(0,s.kt)("p",null,"People have been implementing queues on Postgres in many different ways and we\u2019re excited about combining lessons learned from those projects into a simple, feature-rich extension. "),(0,s.kt)("p",null,"Some exciting features of the project include:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Guaranteed exactly-once delivery of messages within a visibility timeout"),(0,s.kt)("li",{parentName:"ul"},"Optional archival of messages retention for replayability and retention"),(0,s.kt)("li",{parentName:"ul"},"Familiar SQL interface"),(0,s.kt)("li",{parentName:"ul"},"Single and Batch read of messages"),(0,s.kt)("li",{parentName:"ul"},"Client SDKs in both Rust and Python for an ORM-like feel")),(0,s.kt)("h2",{id:"the-need-for-message-queues"},"The need for message queues"),(0,s.kt)("p",null,"Message queues are a very common architectural feature to manage operational pipelines, particularly within the context of asynchronous tasks and distributed systems. There are products in the market that support message queues (Kafka, RSMQ, RabbitMQ, SQS); however, when adopting one of these technologies, you increase your cognitive load, required skills and production support overhead."),(0,s.kt)("h2",{id:"building-your-queues-on-postgres"},"Building your queues on Postgres"),(0,s.kt)("p",null,"As a Postgres startup, we had the same issue, and we decided to build our own Message Queue based on Postgres. We are not the first: others have implemented queues on Postgres, and many have written about it including ",(0,s.kt)("a",{parentName:"p",href:"https://dagster.io/blog/skip-kafka-use-postgres-message-queue"},"Dagster"),", ",(0,s.kt)("a",{parentName:"p",href:"https://www.crunchydata.com/blog/message-queuing-using-native-postgresql"},"CrunchyData"),", and ",(0,s.kt)("a",{parentName:"p",href:"https://postgres.fm/episodes/queues-in-postgres"},"PostgresFM")," dedicated an entire podcast episode to them."),(0,s.kt)("p",null,"At Tembo, we needed a job queue to manage tasks between our control-plane and data-plane in our managed cloud offering. Our control-plane publishes tasks like ",(0,s.kt)("inlineCode",{parentName:"p"},"create postgres cluster"),", and ",(0,s.kt)("inlineCode",{parentName:"p"},"update postgres cluster"),". "),(0,s.kt)("p",null,"To keep our architecture simple and reduce technology sprawl, we built a Postgres extension so that we could run queues for our cloud and more easily share the implementation with the community."),(0,s.kt)("h2",{id:"queues-implemented-with-best-practices"},"Queues Implemented with best practices"),(0,s.kt)("p",null,"PGMQ was implemented on Postgres and follows industry best practices. One of the most important practices is the use of Postgres\u2019s ",(0,s.kt)("a",{parentName:"p",href:"https://www.2ndquadrant.com/en/blog/what-is-select-skip-locked-for-in-postgresql-9-5/"},"SKIP LOCKED"),", which is similar to ",(0,s.kt)("inlineCode",{parentName:"p"},"NOWAIT")," in other databases. ",(0,s.kt)("inlineCode",{parentName:"p"},"SKIP LOCKED")," helps ensure that consumers don't hang and ",(0,s.kt)("inlineCode",{parentName:"p"},"FOR UPDATE")," ensures messages are not duplicated on read. PGMQ also supports partitioning, which is particularly beneficial for large queues and can be used to efficiently archive / expire old messages."),(0,s.kt)("p",null,"PGMQ also provides exactly once delivery semantics within a visibility timeout. Similar to Amazon\u2019s SQS and RSMQ, PGMQ consumers set the period of time during which Postgres will prevent all consumers from receiving and processing a message. This is done by the consumer on read, and once the visibility timeout expires the message becomes available for consumption once again. That way, if a consumer crashes, there is no data loss. This effectively means at-least-once delivery semantics once the first visibility timeout has expired."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"vt",src:n(88912).Z,title:"VisibilityTimeout",width:"2382",height:"740"})),(0,s.kt)("h2",{id:"using-pgmq"},"Using PGMQ"),(0,s.kt)("p",null,"To get started, check out our project\u2019s ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/tembo-io/pgmq/blob/main/README.md#installation"},"README")," for a guide on installing the extension."),(0,s.kt)("p",null,"You can create a new queue by simply calling"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT pgmq_create('my_queue');\n")),(0,s.kt)("p",null,"Then, pgmq_send() a couple messages to the queue. The message id is returned from the send() function."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * from pgmq_send('my_queue', '{\"foo\": \"bar1\"}');\nSELECT * from pgmq_send('my_queue', '{\"foo\": \"bar2\"}');\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"}," pgmq_send\n-----------\n         1\n(1 row)\n\n pgmq_send\n-----------\n         2\n(1 row)\n")),(0,s.kt)("p",null,"Read ",(0,s.kt)("inlineCode",{parentName:"p"},"2")," messages from the queue. Make them invisible for ",(0,s.kt)("inlineCode",{parentName:"p"},"30")," seconds. If the messages are not deleted or archived within 30 seconds, they will become visible again and can be read by another consumer."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * from pgmq_read('my_queue', 30, 2);\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},' msg_id | read_ct |              vt               |          enqueued_at          |    message\n--------+---------+-------------------------------+-------------------------------+---------------\n      1 |       1 | 2023-02-07 04:56:00.650342-06 | 2023-02-07 04:54:51.530818-06 | {"foo":"bar1"}\n      2 |       1 | 2023-02-07 04:56:00.650342-06 | 2023-02-07 04:54:51.530818-06 | {"foo":"bar2"}\n')),(0,s.kt)("p",null,"If the queue is empty, or if all messages are currently invisible, no rows will be returned."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * from pgmq_read('my_queue', 30, 1);\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"}," msg_id | read_ct | vt | enqueued_at | message\n--------+---------+----+-------------+---------\n")),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"Archiving")," removes the message from the queue and inserts it to the queue\u2019s archive table. This provides you with an opt-in retention mechanism for messages, and is an excellent way to debug applications."),(0,s.kt)("p",null,"Archive the message with id 2."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * from pgmq_archive('my_queue', 2);\n")),(0,s.kt)("p",null,"Then inspect the message on the archive table."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * from pgmq_my_queue_archive;\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},' msg_id | read_ct |         enqueued_at          |          deleted_at           |              vt               |     message     \n--------+---------+------------------------------+-------------------------------+-------------------------------+-----------------\n      2 |       1 | 2023-04-25 00:55:40.68417-05 | 2023-04-25 00:56:35.937594-05 | 2023-04-25 00:56:20.532012-05 | {"foo": "bar2"}```\n')),(0,s.kt)("p",null,"Alternatively, you can delete a message forever."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * from pgmq_send('my_queue', '{\"foo\": \"bar3\"}');\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"}," pgmq_send\n-----------\n         3\n(1 row)\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT pgmq_delete('my_queue', 3);\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"}," pgmq_delete\n-------------\n t\n")),(0,s.kt)("h2",{id:"getting-involved"},"Getting involved"),(0,s.kt)("p",null,"Give us a ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/tembo-io/pgmq"},"star")," and try out PGMQ by cloning the ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/tembo-io/pgmq"},"repo")," and following the example in the README. Please use Github issues if you run into any issues or have any feedback. "),(0,s.kt)("p",null,"We\u2019ve also built client side libraries in ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/tembo-io/pgmq/tree/main/core"},"Rust")," and ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/tembo-io/pgmq/tree/main/tembo-pgmq-python"},"Python"),", which will give you an ORM-like experience."),(0,s.kt)("p",null,"You can also try PGMQ on ",(0,s.kt)("a",{parentName:"p",href:"https://tembo.io/"},"Tembo Cloud")," as part of our ",(0,s.kt)("a",{parentName:"p",href:"https://tembo.io/docs/stacks/message-queue"},"Message Queue Stack"),". Tembo Cloud\u2019s Message Queue Stack is powered by PGMQ, but also ships with Postgres configurations optimized for message queue workloads. We\u2019re also working on adding metrics and data visualizations specific to message queues."),(0,s.kt)("h2",{id:"interested-in-learning-more"},"Interested in learning more?"),(0,s.kt)("p",null,"Stay tuned for our upcoming post ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/tembo-io/pg_later"},"pg_later"),", an extension we built on top of PGMQ as well as benchmarks comparing PGMQ to ",(0,s.kt)("a",{parentName:"p",href:"https://aws.amazon.com/sqs/"},"SQS")," and ",(0,s.kt)("a",{parentName:"p",href:"https://redis.com/"},"Redis"),"."))}c.isMDXComponent=!0},88912:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/vt-460a9da647d1b33b4d5a3fd2d9e9d13b.png"}}]);