"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[547],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=o.createContext({}),m=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=m(e.components);return o.createElement(i.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=m(n),d=a,g=c["".concat(i,".").concat(d)]||c[d]||u[d]||r;return n?o.createElement(g,s(s({ref:t},p),{},{components:n})):o.createElement(g,s({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[c]="string"==typeof e?e:a,s[1]=l;for(var m=2;m<r;m++)s[m]=n[m];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},48990:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>m});var o=n(87462),a=(n(67294),n(3905));const r={slug:"anon-dump",title:"Anonymized dump of your Postgres data",authors:["steven"],tags:["postgres","extensions","postgresql_anonymizer"]},s=void 0,l={permalink:"/blog/anon-dump",editUrl:"https://github.com/tembo-io/website/blob/main/blog/2023-10-24-anonymous-dump/index.md",source:"@site/blog/2023-10-24-anonymous-dump/index.md",title:"Anonymized dump of your Postgres data",description:"Someone on X wanted to know how to get an anonymous dump of Postgres data, but doesn't want to install an extension in their production DB. I want to show how you can start a local database, dump the production data there, then do an anonymized dump from that without too much hassle.",date:"2023-10-24T00:00:00.000Z",formattedDate:"October 24, 2023",tags:[{label:"postgres",permalink:"/blog/tags/postgres"},{label:"extensions",permalink:"/blog/tags/extensions"},{label:"postgresql_anonymizer",permalink:"/blog/tags/postgresql-anonymizer"}],readingTime:2.265,hasTruncateMarker:!1,authors:[{name:"Steven Miller",title:"Founding Engineer",url:"https://github.com/sjmiller609",email:"noreply@tembo.io",imageURL:"https://github.com/sjmiller609.png",key:"steven"}],frontMatter:{slug:"anon-dump",title:"Anonymized dump of your Postgres data",authors:["steven"],tags:["postgres","extensions","postgresql_anonymizer"]},prevItem:{title:"Tembo Operator: A Rust-based Kubernetes Operator for Postgres",permalink:"/blog/tembo-operator"},nextItem:{title:"Hacking Postgres, Ep. 5: Alexander Korotkov",permalink:"/blog/hacking-postgres-ep5"}},i={authorsImageUrls:[void 0]},m=[{value:"Getting set up",id:"getting-set-up",level:2},{value:"Dump the data into your local DB",id:"dump-the-data-into-your-local-db",level:2},{value:"Anonymize the local DB",id:"anonymize-the-local-db",level:2},{value:"Done!",id:"done",level:2}],p={toc:m},c="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Someone on X wanted to know how to get an anonymous dump of Postgres data, but doesn't want to install an extension in their production DB. I want to show how you can start a local database, dump the production data there, then do an anonymized dump from that without too much hassle."),(0,a.kt)("h2",{id:"getting-set-up"},"Getting set up"),(0,a.kt)("p",null,"Dockerfile:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"FROM quay.io/tembo/tembo-local:latest\n\n# Install extensions from Trunk\nRUN trunk install pgcrypto\nRUN trunk install postgresql_anonymizer\n\n# Setting samples to use for anonymization\nRUN cd /var/lib/postgresql/data/tembo/extension/anon && \\\n  wget https://gitlab.com/dalibo/postgresql_anonymizer/-/raw/master/data/lorem_ipsum.csv && \\\n  wget https://gitlab.com/dalibo/postgresql_anonymizer/-/raw/master/data/identifiers_category.csv && \\\n  wget https://gitlab.com/dalibo/postgresql_anonymizer/-/raw/master/data/identifier_fr_FR.csv && \\\n  wget https://gitlab.com/dalibo/postgresql_anonymizer/-/raw/master/data/identifier_en_US.csv && \\\n  wget https://gitlab.com/dalibo/postgresql_anonymizer/-/raw/master/data/address.csv && \\\n  wget https://gitlab.com/dalibo/postgresql_anonymizer/-/raw/master/data/city.csv && \\\n  wget https://gitlab.com/dalibo/postgresql_anonymizer/-/raw/master/data/company.csv && \\\n  wget https://gitlab.com/dalibo/postgresql_anonymizer/-/raw/master/data/country.csv && \\\n  wget https://gitlab.com/dalibo/postgresql_anonymizer/-/raw/master/data/email.csv && \\\n  wget https://gitlab.com/dalibo/postgresql_anonymizer/-/raw/master/data/first_name.csv && \\\n  wget https://gitlab.com/dalibo/postgresql_anonymizer/-/raw/master/data/iban.csv && \\\n  wget https://gitlab.com/dalibo/postgresql_anonymizer/-/raw/master/data/last_name.csv && \\\n  wget https://gitlab.com/dalibo/postgresql_anonymizer/-/raw/master/data/postcode.csv && \\\n  wget https://gitlab.com/dalibo/postgresql_anonymizer/-/raw/master/data/siret.csv && \\\n  wget https://gitlab.com/dalibo/postgresql_anonymizer/-/raw/master/data/lorem_ipsum.csv\n")),(0,a.kt)("p",null,"Build and run it like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker build -t example-local-image .\ndocker rm --force local-tembo || true\ndocker run -it --name local-tembo -p 5432:5432 --rm example-local-image\n")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://tembo.io/docs/tembo-cloud/try-extensions-locally"},"This guide")," covers how to quickly try out Postgres extensions locally in more detail."),(0,a.kt)("h2",{id:"dump-the-data-into-your-local-db"},"Dump the data into your local DB"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"pg_dump 'your-connection-string-here' | psql 'postgres://postgres:postgres@localhost:5432'\n")),(0,a.kt)("h2",{id:"anonymize-the-local-db"},"Anonymize the local DB"),(0,a.kt)("p",null,"Initialize the extension:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SET session_preload_libraries = 'anon';\nLOAD 'anon';\nCREATE EXTENSION IF NOT EXISTS anon CASCADE;\nSELECT anon.init();\n")),(0,a.kt)("p",null,'For example, I have a table called "extension_owners", and I would like to anonymize the user_name column:'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"postgres=# select extension_id,user_name from extension_owners limit 1;\n extension_id |      user_name\n--------------+---------------------\n           26 | coredb-service-user\n(1 row)\n")),(0,a.kt)("p",null,"I configured anonymization on that column like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SECURITY LABEL FOR anon ON COLUMN extension_owners.user_name\n  IS 'MASKED WITH FUNCTION anon.lorem_ipsum( words := 1 )';\n")),(0,a.kt)("p",null,"There are a lot of other options for anonymizing data, and you can even write your own functions. More information in ",(0,a.kt)("a",{parentName:"p",href:"https://gitlab.com/dalibo/postgresql_anonymizer/-/blob/master/docs/masking_functions.md?ref_type=heads"},"these docs"),"."),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"This next step replaces data in the local database.")),(0,a.kt)("p",null,"Since we are working on a local copy of the data, we can just use this function to replace anonymized columns in-place."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"SELECT anon.anonymize_database();\n")),(0,a.kt)("p",null,"We can see now this column has been anonymized."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"postgres=# select user_name from extension_owners limit 10;\n user_name\n------------\n First\n They\n Cell\n Price\n Them\n Go\n Parent\n Republican\n With\n Between\n(10 rows)\n")),(0,a.kt)("p",null,"You can do further modification from here, for example masking and replacing additional columns, formatting columns, etc."),(0,a.kt)("h2",{id:"done"},"Done!"),(0,a.kt)("p",null,"Now you have an anonymized database locally. From here, you can pg_dump to a file, or do something else!"),(0,a.kt)("p",null,"If you think this kind of thing is cool, follow me on X (",(0,a.kt)("a",{parentName:"p",href:"https://x.com/sjmiller609"},"@sjmiller609"),") for more content. At Tembo, we are all about Postgres extensions. You can try out extensions on ",(0,a.kt)("a",{parentName:"p",href:"https://cloud.tembo.io"},"Tembo Cloud")," for free."))}u.isMDXComponent=!0}}]);