"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8228],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>b});var o=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=o.createContext({}),s=function(e){var n=o.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=s(e.components);return o.createElement(c.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(t),m=a,b=p["".concat(c,".").concat(m)]||p[m]||d[m]||r;return t?o.createElement(b,i(i({ref:n},u),{},{components:t})):o.createElement(b,i({ref:n},u))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,i=new Array(r);i[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<r;s++)i[s]=t[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},85162:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(67294),a=t(86010);const r={tabItem:"tabItem_Ymn6"};function i(e){let{children:n,hidden:t,className:i}=e;return o.createElement("div",{role:"tabpanel",className:(0,a.Z)(r.tabItem,i),hidden:t},n)}},74866:(e,n,t)=>{t.d(n,{Z:()=>T});var o=t(87462),a=t(67294),r=t(86010),i=t(12466),l=t(16550),c=t(91980),s=t(67392),u=t(50012);function p(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:o,default:a}}=e;return{value:n,label:t,attributes:o,default:a}}))}function d(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??p(t);return function(e){const n=(0,s.l)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function m(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function b(e){let{queryString:n=!1,groupId:t}=e;const o=(0,l.k6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,c._X)(r),(0,a.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(o.location.search);n.set(r,e),o.replace({...o.location,search:n.toString()})}),[r,o])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:o}=e,r=d(e),[i,l]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const o=t.find((e=>e.default))??t[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:n,tabValues:r}))),[c,s]=b({queryString:t,groupId:o}),[p,g]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[o,r]=(0,u.Nk)(t);return[o,(0,a.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:o}),f=(()=>{const e=c??p;return m({value:e,tabValues:r})?e:null})();(0,a.useLayoutEffect)((()=>{f&&l(f)}),[f]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),s(e),g(e)}),[s,g,r]),tabValues:r}}var f=t(72389);const h={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:n,block:t,selectedValue:l,selectValue:c,tabValues:s}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,i.o5)(),d=e=>{const n=e.currentTarget,t=u.indexOf(n),o=s[t].value;o!==l&&(p(n),c(o))},m=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=u.indexOf(e.currentTarget)+1;n=u[t]??u[0];break}case"ArrowLeft":{const t=u.indexOf(e.currentTarget)-1;n=u[t]??u[u.length-1];break}}n?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":t},n)},s.map((e=>{let{value:n,label:t,attributes:i}=e;return a.createElement("li",(0,o.Z)({role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,key:n,ref:e=>u.push(e),onKeyDown:m,onClick:d},i,{className:(0,r.Z)("tabs__item",h.tabItem,i?.className,{"tabs__item--active":l===n})}),t??n)})))}function v(e){let{lazy:n,children:t,selectedValue:o}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===o));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},r.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==o}))))}function k(e){const n=g(e);return a.createElement("div",{className:(0,r.Z)("tabs-container",h.tabList)},a.createElement(y,(0,o.Z)({},e,n)),a.createElement(v,(0,o.Z)({},e,n)))}function T(e){const n=(0,f.Z)();return a.createElement(k,(0,o.Z)({key:String(n)},e))}},21522:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>b,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var o=t(87462),a=(t(67294),t(3905)),r=t(74866),i=t(85162);const l={sidebar_position:4,tags:["api","connection pooling"]},c="Connection Pooling",s={unversionedId:"tembo-cloud/configuration-and-management/connection-pooling",id:"tembo-cloud/configuration-and-management/connection-pooling",title:"Connection Pooling",description:"A connection pooler is a tool used to manage database connections, sitting between your application and Postgres",source:"@site/docs/tembo-cloud/configuration-and-management/connection-pooling.md",sourceDirName:"tembo-cloud/configuration-and-management",slug:"/tembo-cloud/configuration-and-management/connection-pooling",permalink:"/docs/tembo-cloud/configuration-and-management/connection-pooling",draft:!1,editUrl:"https://github.com/tembo-io/website/blob/main/docs/tembo-cloud/configuration-and-management/connection-pooling.md",tags:[{label:"api",permalink:"/docs/tags/api"},{label:"connection pooling",permalink:"/docs/tags/connection-pooling"}],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,tags:["api","connection pooling"]},sidebar:"tutorialSidebar",previous:{title:"Backup and restore",permalink:"/docs/tembo-cloud/configuration-and-management/backup-and-restore"},next:{title:"High Availability",permalink:"/docs/tembo-cloud/configuration-and-management/ha_replication"}},u={},p=[{value:"Enabling and Configuring Connnection Pooling via the Tembo Cloud API",id:"enabling-and-configuring-connnection-pooling-via-the-tembo-cloud-api",level:2},{value:"Connect to your Tembo Instance&#39;s Connection Pooler",id:"connect-to-your-tembo-instances-connection-pooler",level:2},{value:"Connnection Pooling via the Tembo Cloud UI",id:"connnection-pooling-via-the-tembo-cloud-ui",level:2},{value:"Enable and Configure your Tembo Instance&#39;s Connection Pooler",id:"enable-and-configure-your-tembo-instances-connection-pooler",level:3},{value:"Connect to your Tembo Instance&#39;s Connection Pooler",id:"connect-to-your-tembo-instances-connection-pooler-1",level:3}],d={toc:p},m="wrapper";function b(e){let{components:n,...t}=e;return(0,a.kt)(m,(0,o.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"connection-pooling"},"Connection Pooling"),(0,a.kt)("p",null,"A connection pooler is a tool used to manage database connections, sitting between your application and Postgres\ninstance. Because of the way Postgres handles connections, the server may encounter resource constraint issues when\nmanaging a few thousand connections. Using a pooler can alleviate these issues by using actual Postgres connections\nonly when necessary, allowing for easier handling of thousands of connections at a lower cost."),(0,a.kt)("p",null,"This document will guide you through the process of enabling and configuring connection pooling on Tembo Cloud."),(0,a.kt)("h2",{id:"enabling-and-configuring-connnection-pooling-via-the-tembo-cloud-api"},"Enabling and Configuring Connnection Pooling via the Tembo Cloud API"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Generate an API token for communicating with your Tembo instance. Navigate to ",(0,a.kt)("a",{parentName:"li",href:"https://cloud.tembo.io/generate-jwt"},"https://cloud.tembo.io/generate-jwt")," and follow the instructions to generate a token.")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Set the following environment variables:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"export TEMBO_TOKEN=<your token>\nexport TEMBO_ORG=<your organization id>\nexport TEMBO_INST=<your instance id>\n")))),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"Patch your existing Tembo instance with connection pooler settings using the ",(0,a.kt)("a",{parentName:"li",href:"https://tembo.io/docs/tembo-cloud/openapi"},"Tembo Cloud Platform API"),":")),(0,a.kt)(r.Z,{mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"curl",label:"Curl",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'curl -X \'PATCH\' \\\n  "https://api.tembo.io/api/v1/orgs/$TEMBO_ORG/instances/$TEMBO_INST" \\\n  -H "accept: application/json" \\\n  -H "Authorization: Bearer $TEMBO_TOKEN" \\\n  -H "Content-Type: application/json" \\\n  -d \'{\n  "connection_pooler": {\n    "enabled": true,\n    "pooler": {\n      "parameters": {\n        "max_client_conn": "50",\n        "default_pool_size": "5000"\n      },\n      "poolMode": "transaction"\n    }\n  }\n}\'\n')))),(0,a.kt)("h2",{id:"connect-to-your-tembo-instances-connection-pooler"},"Connect to your Tembo Instance's Connection Pooler"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Fetch the connection pooler hostname from the Tembo Cloud API and set it as an environment variable:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'export POOLER_HOST=$(\n  curl -X \'GET\' \\\n  "https://api.tembo.io/api/v1/orgs/$TEMBO_ORG/instances/$TEMBO_INST" \\\n  -H "accept: application/json" \\\n  -H "Authorization: Bearer $TEMBO_TOKEN" \\\n  -H "Content-Type: application/json" \\\n  | jq -r \' .connection_info.pooler_host\'\n)\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Connect to the connection pooler using ",(0,a.kt)("inlineCode",{parentName:"p"},"psql"),":"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'psql "postgresql://<user>:<password>@$POOLER_HOST:5432?sslmode=require"\n')))),(0,a.kt)("h2",{id:"connnection-pooling-via-the-tembo-cloud-ui"},"Connnection Pooling via the Tembo Cloud UI"),(0,a.kt)("h3",{id:"enable-and-configure-your-tembo-instances-connection-pooler"},"Enable and Configure your Tembo Instance's Connection Pooler"),(0,a.kt)("p",null,"Log in to the ",(0,a.kt)("a",{parentName:"p",href:"https://cloud.tembo.io/"},"Tembo Cloud UI"),' and select the "Database" tab in the navigation bar. In the "Settings" view, you can enable/disable connection pooling and tune a set of parameters.'),(0,a.kt)("h3",{id:"connect-to-your-tembo-instances-connection-pooler-1"},"Connect to your Tembo Instance's Connection Pooler"),(0,a.kt)("p",null,"On the Home page of ",(0,a.kt)("a",{parentName:"p",href:"https://cloud.tembo.io/"},"Tembo Cloud UI"),', find the "Show connection strings" button on the right side. This button opens a modal where you can find a PSQL connection string. If you have enabled connection pooling on your instance, there will also be a tab called "Connection Pooling" where you can find the complete connection string specifically for the connection pool.'))}b.isMDXComponent=!0}}]);