import { Oas2Rule } from '../../visitors';
export declare const rules: {
    spec: Oas2Rule;
    'no-invalid-schema-examples': any;
    'no-invalid-parameter-examples': any;
    'info-contact': Oas2Rule;
    'info-license': Oas2Rule;
    'info-license-url': Oas2Rule;
    'tag-description': Oas2Rule;
    'tags-alphabetical': Oas2Rule;
    'paths-kebab-case': Oas2Rule;
    'no-enum-type-mismatch': Oas2Rule;
    'boolean-parameter-prefixes': Oas2Rule;
    'no-path-trailing-slash': Oas2Rule;
    'operation-2xx-response': Oas2Rule;
    'operation-4xx-response': Oas2Rule;
    assertions: Oas2Rule;
    'operation-operationId-unique': Oas2Rule;
    'operation-parameters-unique': Oas2Rule;
    'path-parameters-defined': Oas2Rule;
    'operation-tag-defined': Oas2Rule;
    'path-declaration-must-exist': Oas2Rule;
    'operation-operationId-url-safe': Oas2Rule;
    'operation-operationId': Oas2Rule;
    'operation-summary': Oas2Rule;
    'operation-description': Oas2Rule;
    'path-not-include-query': Oas2Rule;
    'path-params-defined': Oas2Rule;
    'parameter-description': Oas2Rule;
    'operation-singular-tag': Oas2Rule;
    'security-defined': Oas2Rule;
    'no-unresolved-refs': Oas2Rule;
    'no-identical-paths': Oas2Rule;
    'no-ambiguous-paths': Oas2Rule;
    'path-http-verbs-order': Oas2Rule;
    'no-http-verbs-in-paths': Oas2Rule;
    'path-excludes-patterns': Oas2Rule;
    'request-mime-type': Oas2Rule;
    'response-mime-type': Oas2Rule;
    'path-segment-plural': Oas2Rule;
    'response-contains-header': Oas2Rule;
    'response-contains-property': Oas2Rule;
    'scalar-property-missing-example': import("../../visitors").Oas3Rule | Oas2Rule;
};
export declare const preprocessors: {};
